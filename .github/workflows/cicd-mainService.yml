name: CI/CD for each main service

on:
  pull_request:
    branches:
      - config-service
      - gateway-service
      - discovery-service
      - user-service
      - chat-service
      - community-service
      - map-service
      - quote-service

  push:
    branches:
      - config-service
      - gateway-service
      - discovery-service
      - user-service
      - chat-service
      - community-service
      - map-service
      - quote-service

jobs:
  Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: JDK install
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Caching Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradle
        run: chmod +x ./gradlew

      - name: create build file
        run: ./gradlew clean build -i --no-daemon -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/libs/*.jar

  Deployment:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: Integration

    steps:
      - name: Download a built Jar File
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # 브랜치 앞에 이름 가져오기
      - name: Extract service name
        id: extract-service
        run: echo "CONTAINER_NAME=$(echo ${GITHUB_REF#refs/heads/} | cut -d'/' -f1)-service" >> $GITHUB_ENV


      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_ID }}/${{ env.CONTAINER_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to GCP
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            sudo docker-compose stop ${{env.CONTAINER_NAME}}
            sudo docker-compose rm ${{env.CONTAINER_NAME}}
            sudo docker-compose -f docker-compose.yml up --build -d ${{env.CONTAINER_NAME}}
            sudo docker-compose ps
